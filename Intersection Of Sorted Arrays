class Solution {
public:
    bool binarySearch(vector<int> nums, int target)
    {
        int l = 0, r = nums.size()-1,mid;

        while(l<=r)
        {
            mid = l+(r-l)/2;
            if(nums[mid] < target)
                l = mid+1;
            else if(nums[mid] > target)
                r = mid-1;
            else
                return true;
        }

        return false;
    }

    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {

    sort(nums1.begin(), nums1.end());
    sort(nums2.begin(), nums2.end());
    vector<int> ans;

     for(int i = 0;i<nums1.size();i++)
     {
         if(binarySearch(nums2, nums1[i]))
            ans.push_back(nums1[i]);

        while(i<nums1.size() -1 && nums1[i] == nums1[i+1])i++;
     }   

     return ans;
     
    }
};
